//= require jquery
//= require_tree ./lib

jQuery.extend(jQuery.browser, {
  mobile: navigator.userAgent.toLowerCase().match(/iPad|iPhone|Android/i)
});

//------------------------------------------------------------------
$(function () {
  var d = 250;

  $('input[placeholder], textarea[placeholder]').placeholder();
  $('#pf-container').removeClass('nojs');

  // utf-8!
  $.ajaxSetup({ scriptCharset: "utf-8" , contentType: "application/json; charset=utf-8"});


  /**** MOBILE CSS ****/
  if ($.browser.mobile) {
    $('body').addClass('mobile');
  }
  /**** PF TAB BAR ****/

  $('#pf-tab-bar .pf-tab-header a').click(function () {
    var t = $(this);

    if (t.hasClass('pf-current') == false) {
      $('.pf-tab').hide();
      $('#pf-tab-bar a').removeClass('pf-current');

      $('#pf-' + t.attr('id').split('-')[1] + '-tab').show();
      t.addClass('pf-current');
    }

    return false;
  });

  /**** PF MAP ****/

  // format distance
  $.fn.extend({
    formatDistance: function () {
      // no
      var number = this.html();

      // formatted regexp
      var distance_regexp = /[0-9]*\.[0-9]*(km|m)/;

      if (distance_regexp.test(number)) {
        $.error('formatDistance(): Already formatted');
      }
      if (parseInt(number)) {
          // m if < 1km
          result = parseInt(number*1000)  + 'm';

          // X.Xkm if < 10km
          if (number > 1) {
            result = parseInt(Math.ceil(number*10))/10 + 'km'; }
          // Xkm if > 10km
          if (number > 10) {
            result = parseInt(Math.ceil(number)) + 'km'; }

          // insert result
          this.html(result);
      }
      else {
        $.error('formatDistance(): Not a float or int');
      }

      // return element
      return this;
    }
  });


  var PFLocationHash = window.location.hash.split("#!");
  var PFShebangData = []

  // we have shebang data
  if (PFLocationHash.length > 1)
    PFShebangData = PFLocationHash[1].split("/")

  // search var
  var PFSearch = {
    'string': (PFShebangData[4] || '51.165691,10.451526'),
    'country': (PFShebangData[1] || 'de'),
    'type': (PFShebangData[2] ||'d'),
    'product': (PFShebangData[3] || 'c'),
    'items': [],
    'coord': { 'lat': 0, 'lng': 0}
  };

  var PFlatlng = PFSearch.string.split(',');
  PFSearch.coord.lat = parseFloat(PFlatlng[0]);
  PFSearch.coord.lng = parseFloat(PFlatlng[1]);

  // set values of selects
  $('#pf-layer-select').val(PFSearch.type+'-'+PFSearch.product);
  $('#pf-country-select').val(PFSearch.country);

  // custom marker
  var PFIcon = L.Icon.extend({
    iconUrl: '<%= asset_path 'leaflet/marker-small.png' %>',
    shadowUrl: '<%= asset_path 'leaflet/marker-shadow-small.png' %>',
    iconSize: new L.Point(19, 31),
    shadowSize: new L.Point(31, 31),
    iconAnchor: new L.Point(9, 31),
    popupAnchor: new L.Point(-8, -31)
  });

  var PFUrls = {
    'geocoder': '/geocoder?q=',
    'geojson': '/geojson/',
    'route': 'http://maps.google.com/maps?hl=de&daddr='
  };

  // countries coords
  var PFCountries = {
    'de': {
      'lng': 10.451526,
      'lat': 51.165691
    },
    'at': {
      'lng': 14.550072,
      'lat': 47.516231
    },
    'ch': {
      'lng':  8.227512,
      'lat': 46.818188
    }
  };

  // create map
  var PFMap = new L.Map('pf-map');

  // init cloudmade
  var PFCloudmadeUrl = 'http://{s}.tile.osm.org/{z}/{x}/{y}.png',
  PFCloudmadeAttrib = 'Map data &copy; '+new Date().getFullYear()+' OpenStreetMap,
  PFCloudmade = new L.TileLayer(PFCloudmadeUrl, {maxZoom: 18, attribution: PFCloudmadeAttrib});

  // init map
  var PFStart = new L.LatLng(PFSearch.coord.lat, PFSearch.coord.lng);
  PFMap.setView(PFStart, (PFShebangData[5] || 5)).addLayer(PFCloudmade);

  // add red circle if highlight option
  if (PFShebangData[6] == "highlight") {
    var PFCircle = new L.Circle(PFStart, 100, {
      color: 'red',
      fillColor: 'transparent',
      fillOpacity: 0.75
    });
    PFMap.addLayer(PFCircle);
  }

  // map layer group
  var PFLayerGroup = new L.LayerGroup();
  PFMap.addLayer(PFLayerGroup);

  // on layer change
  $('#pf-layer-select').bind('change', function () {
    // extract search parameters
    v = $('#pf-layer-select').val().split('-');

    // set search vars
    PFSearch.type = v[0];
    PFSearch.product = v[1];

    // update map
    $('#pf-map').trigger('update');
  });

  // on country change
  $('#pf-country-select').bind('change', function () {
    // which country?
    switch($('#pf-country-select').val()) {
      default:
        selected_lat = PFCountries.de.lat;
      selected_lng = PFCountries.de.lng;
      break;
      case 'at':
        selected_lat = PFCountries.at.lat;
      selected_lng = PFCountries.at.lng;
      break;
      case 'ch':
        selected_lat = PFCountries.ch.lat;
      selected_lng = PFCountries.ch.lng;
      break;
    }

    // update search var
    PFSearch.country = $('#pf-country-select').val();
    PFSearch.coord.lng = selected_lng;
    PFSearch.coord.lat = selected_lat;

    // pan+zoom country
    selected_country = new L.LatLng(selected_lat, selected_lng);
    PFMap.setView(selected_country, 5);

    // update
    $('#pf-map').trigger('update');
  });


  $('#pf-map').bind('update-shebang', function () {
    window.location.hash = '!/' + PFSearch.country + '/' + PFSearch.type + '/' + PFSearch.product + '/' +
                           PFMap.getCenter().lat + ',' + PFMap.getCenter().lng + '/' + PFMap.getZoom();
  })

  // update shebang on zoom and move
  PFMap.on('zoomend', function () { $('#pf-map').trigger('update-shebang'); })
  PFMap.on('moveend', function () { $('#pf-map').trigger('update-shebang'); })

  // update map
  $('#pf-map').bind('update', function () {
    // update shebang hash
    $('#pf-map').trigger('update-shebang');

    // add loading class
    //$('#pf-search-form .pf-loading').show();

    $.getJSON(PFUrls.geojson + PFSearch.country + '/' + PFSearch.type + '/' + PFSearch.product + '/near/' + PFSearch.string, function(data) {
      // geoJSON Layer
      var PFGeoJSONLayer = new L.GeoJSON(null, {
        pointToLayer: function (latlng) {
          return new L.Marker(latlng, {
            icon: new PFIcon()
          });
        }
      });

      // bind Popups
      PFGeoJSONLayer.on('featureparse', function (e) {
        if (e.properties) {
          e.layer.bindPopup(Mustache.render(PFPopupTemplate, e.properties));
        }
      });

      // clear old layers and add new layer
      PFLayerGroup.clearLayers();
      PFLayerGroup.addLayer(PFGeoJSONLayer);
      PFGeoJSONLayer.addGeoJSON(data);

      // update search var
      PFSearch.items = data.features.reverse();

      // if found, hide no-results div
      if (data.features.length > 0)
        $('#pf-no-results').hide();
      else
        $('#pf-no-results').show();

      // clear list
      $('#pf-results li').remove();

      // display first 3 list elements
      $('#pf-results').trigger('load-more');

      // close all open popups
      $('a.leaflet-popup-close-button').trigger('click');

      // remove loading class
      //$('#pf-search-form .pf-loading').hide();
    });
  });

  // load 3 more items to the pf-results list
  $('#pf-results').bind('load-more', function () {
    // display 3 more items
    for (i = 0; i < 3; i++) {
      if (PFSearch.items.length > 0) {
        // add route url
          p = PFSearch.items.pop().properties;
          p.routeUrl = PFUrls.route + escape(p.street) + ',+' + escape(p.city) + ',+' + escape(p.country);
        // render element
        $(this).append(Mustache.render(PFListItemTemplate, p));
        // fade in element
        $('#pf-results li:last-child').fadeOut(0).fadeIn(2*d);
        // format
        $('#pf-results li:last-child .pf-distance').formatDistance();
      }
    }

    // hide link if no more items
    if (PFSearch.items.length == 0)
      $('#pf-results-load-more-link').hide();
    else
      $('#pf-results-load-more-link').show();
  });

  $('#pf-results-load-more-link').click(function () {
    $('#pf-results').trigger('load-more');
    //smooth scroll to bottom
    $('html, body').animate({scrollTop: $(window).scrollTop() + 120}, d);
    return false;
  });

  // initial update
  $('#pf-map').trigger('update');

  //search/geocoding
  $('#pf-search-now').bind('click', function () {
    if ($('#pf-search-input').val().length > 0 ) {
      // disable form
      $('#pf-search-now, #pf-search-input').attr('disabled', 'disabled').addClass('disabled');
      $('#pf-search-now').val('Laden..');    
      $.getJSON(PFUrls.geocoder + $('#pf-search-input').val(), function(data) {
        // reset view
        $('#pf-search-now, #pf-search-input').removeAttr('disabled').removeClass('disabled');
        $('#pf-search-now').val('Suchen');    

        if (data.result == 'ok') {
          // zoom map
          search_result = new L.LatLng(data.coord.lat, data.coord.lng);
          PFMap.setView(search_result, 15);

          PFSearch.string = data.coord.lat + ',' + data.coord.lng;
          $('#pf-map').trigger('update');
        }
        else {
          alert('Leider wurde kein Ort zu Ihrer Eingabe gefunden!');
          $('#pf-search-input').trigger('focus');
        }
      });
    }
    else {
      alert('Bitte geben Sie eine Adresse zum Suchen ein!');
    }

    return false;
  });

 });

